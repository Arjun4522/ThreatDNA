version: '3.8'

volumes:
  threats_bleve_data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-setup:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka-setup
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
              cub kafka-ready -b kafka:9092 1 20 && \
              kafka-topics --create --topic cti-records --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1'"
    restart: on-failure

  producer:
    build:
      context: .
      dockerfile: cmd/producer/Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: cti-records
    volumes:
      - ./data:/app/data
    depends_on:
      kafka-setup:
        condition: service_completed_successfully
    command: ["/app/producer"]

  builder:
    build:
      context: .
      dockerfile: cmd/builder/Dockerfile
    depends_on:
      kafka-setup:
        condition: service_completed_successfully
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: cti-records
      DB_PATH: /app/threats.bleve/test_genomes.db
    volumes:
      - threats_bleve_data:/app/threats.bleve
    restart: unless-stopped
    command: ["/app/builder"]

  search:
    build:
      context: .
      dockerfile: cmd/search/Dockerfile
    depends_on:
      - builder
    environment:
      DB_PATH: /app/threats.bleve/test_genomes.db
    volumes:
      - threats_bleve_data:/app/threats.bleve
    ports:
      - "8080:8080"
    logging:
      driver: "json-file"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - search
    environment:
      REACT_APP_API_URL: http://localhost:8080
    command: ["npm", "start"]
